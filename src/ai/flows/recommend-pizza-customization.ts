// This is an autogenerated file from Firebase Studio.
'use server';

/**
 * @fileOverview Recommends pizza customizations based on current selections and popular combinations.
 *
 * - recommendPizzaCustomization - A function that suggests pizza customizations.
 * - RecommendPizzaCustomizationInput - The input type for the recommendPizzaCustomization function.
 * - RecommendPizzaCustomizationOutput - The return type for the recommendPizzaCustomization function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const RecommendPizzaCustomizationInputSchema = z.object({
  currentSelections: z
    .array(z.string())
    .describe('The list of currently selected pizza items or toppings.'),
  userPreferences: z
    .string()
    .optional()
    .describe('Optional user preferences or dietary restrictions.'),
});
export type RecommendPizzaCustomizationInput = z.infer<
  typeof RecommendPizzaCustomizationInputSchema
>;

const RecommendPizzaCustomizationOutputSchema = z.object({
  suggestedCustomizations: z
    .array(z.string())
    .describe('AI-powered suggestions for additional toppings or crust type.'),
  reasoning: z
    .string()
    .describe('The AI reasoning behind the suggested customizations.'),
});
export type RecommendPizzaCustomizationOutput = z.infer<
  typeof RecommendPizzaCustomizationOutputSchema
>;

export async function recommendPizzaCustomization(
  input: RecommendPizzaCustomizationInput
): Promise<RecommendPizzaCustomizationOutput> {
  return recommendPizzaCustomizationFlow(input);
}

const prompt = ai.definePrompt({
  name: 'recommendPizzaCustomizationPrompt',
  input: {schema: RecommendPizzaCustomizationInputSchema},
  output: {schema: RecommendPizzaCustomizationOutputSchema},
  prompt: `Based on the current pizza selections: {{{currentSelections}}},
  and optional user preferences: {{{userPreferences}}},
  suggest additional toppings or crust types to enhance the pizza order.
  Consider popular combinations and user preferences to provide relevant suggestions.
  Explain the reasoning behind the suggestions.
  Return the suggestions in a JSON format.
  `,
});

const recommendPizzaCustomizationFlow = ai.defineFlow(
  {
    name: 'recommendPizzaCustomizationFlow',
    inputSchema: RecommendPizzaCustomizationInputSchema,
    outputSchema: RecommendPizzaCustomizationOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);
